// This program creates a minesweeper game board and places mines randomly on it.

import java.util.Scanner;

public class Project {
    public static void main(String[] args) {
        try (Scanner scanner = new Scanner(System.in)) {
            // Read board dimensions and number of mines
            System.out.println("Enter board dimensions (rows columns) and number of mines:");
            int rows = scanner.nextInt();
            int cols = scanner.nextInt();
            int mines = scanner.nextInt();
            
            // Initialize the game board
            String[][] board = new String[rows][cols];
            initializeBoard(board);
            
            // Place mines
            System.out.println("Enter mine coordinates (row column) for each mine:");
            placeMines(board, mines, scanner);
            
            // Calculate numbers
            calculateNumbers(board);
            
            // Print the final board
            printBoard(board);
        }
    }
    
    private static void initializeBoard(String[][] board) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] = "0";
            }
        }
    }
    
    private static void placeMines(String[][] board, int mines, Scanner scanner) {
        for (int i = 0; i < mines; i++) {
            int x = scanner.nextInt() - 1;
            int y = scanner.nextInt() - 1;
            board[x][y] = "m";
        }
    }
    
    private static void calculateNumbers(String[][] board) {
        int rows = board.length;
        int cols = board[0].length;
        
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (!board[i][j].equals("m")) {
                    int count = countAdjacentMines(board, i, j);
                    board[i][j] = String.valueOf(count);
                }
            }
        }
    }
    
    private static int countAdjacentMines(String[][] board, int row, int col) {
        int count = 0;
        int rows = board.length;
        int cols = board[0].length;
        
        // Check all 8 adjacent cells
        int[][] directions = {
            {-1, -1}, {-1, 0}, {-1, 1},
            {0, -1},           {0, 1},
            {1, -1},  {1, 0},  {1, 1}
        };
        
        for (int[] dir : directions) {
            int newRow = row + dir[0];
            int newCol = col + dir[1];
            
            if (newRow >= 0 && newRow < rows && newCol >= 0 && newCol < cols) {
                if (board[newRow][newCol].equals("m")) {
                    count++;
                }
            }
        }
        
        return count;
    }
    
    private static void printBoard(String[][] board) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                System.out.print(board[i][j]);
                if (j < board[0].length - 1) {
                    System.out.print(" ");
                }
            }
            System.out.println();
        }
    }
}
